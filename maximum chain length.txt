que:https://practice.geeksforgeeks.org/problems/max-length-chain/1/
solution:
bool func (pair<int,int> a, pair<int,int> b)
{
if(a.second != b.second) return a.second < b.second;
else return a.first < b.first;
}

int maxChainLen(struct val p[],int n)
{
//Your code here
if(n==0||n==1)
return n;
vector<pair<int,int>> v;
for(int i=0;i<n;i++){
    v.push_back(make_pair(p[i].first,p[i].second));
}
sort(v.begin(),v.end(),func);

int max=0;
int count=0;
for(int i=0;i<n-1;i++){
    int key=v[i].second;
    count=1;
    for(int j=i+1;j<n;j++){
        if(key<v[j].first){
        key=v[j].second;
        count++;}
    }
    
    if(count>max)
    max=count;
}
return max;
}